def not-done          {.workflow_state_types ["started" "unstarted"]}
def not-finished      {.workflow_state_types ["started" "unstarted"]}
def owned-by          value (fn [member] {.owner_ids [member]})

def epics-unstarted   value (fn [epics] (where epics {.state "to do"}))
def epics-todo        value (fn [epics] (where epics {.state "to do"}))
def epics-in-progress value (fn [epics] (where epics {.state "in progress"}))
def epics-started     value (fn [epics] (where epics {.state "in progress"}))
def epics-done        value (fn [epics] (where epics {.state "done"}))
def epics-finished    value (fn [epics] (where epics {.state "done"}))
def epics-completed   value (fn [epics] (where epics {.state "done"}))

def stories-unstarted   value (fn [stories] (where stories {[.workflow_state_id .type] "unstarted"}))
def stories-todo        value (fn [stories] (where stories {[.workflow_state_id .type] "unstarted"}))
def stories-in-progress value (fn [stories] (where stories {[.workflow_state_id .type] "started"}))
def stories-started     value (fn [stories] (where stories {[.workflow_state_id .type] "started"}))
def stories-done        value (fn [stories] (where stories {[.workflow_state_id .type] "done"}))
def stories-finished    value (fn [stories] (where stories {[.workflow_state_id .type] "done"}))
def stories-completed   value (fn [stories] (where stories {[.workflow_state_id .type] "done"}))

def bugs     value (fn [stories] (where stories {.story_type "bug"}))
def chores   value (fn [stories] (where stories {.story_type "chore"}))
def features value (fn [stories] (where stories {.story_type "feature"}))

def my-stories               value (fn [] (find-stories {.owner_ids [me] .workflow_state_types ["unstarted" "started"]}))
def my-iterations            value (fn [] (interpret "my-stories | map .iteration_id | where identity | map fetch ")) 
def my-current-iterations    value (fn [] (interpret "my-iterations | where {.status \"started\"} "))
def my-unfinished-iterations value (fn [] (interpret "my-iterations | where {.status \"done\"} "))
def my-epics                 value (fn [] (interpret "my-stories | map .epic_id | where identity | map epic | where {.state %(not (= % \"done\"))}"))
def team-current-iterations  value (fn [team] (interpret "team | iterations | where {.status \"started\"}"))

def -priv-defaults defaults

(if (= nil (.team -priv-defaults))
  %(println "[INFO] Don't forget to set a default team with `default`")
  %(value nil))
(if (= nil (.workflow -priv-defaults))
  %(println "[INFO] Don't forget to set a default workflow with `default`")
  %(value nil))
(if (= nil (.workflow-state -priv-defaults))
  %(println "[INFO] Don't forget to set a default workflow state with `default`")
  %(value nil))

